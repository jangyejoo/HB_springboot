<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hb.dao.MemberDao"><!--namespace를 통해 UserDAO와 연결합니다. -->
  		
  <select id="selectMembers" resultType="com.example.hb.dto.MemberDto"><!-- selectUsers()메서드를 호출하면 실행할 SELECT문이며, 
						UserDTO 객체를 파라미터로 받아, UserDTO객체를 반환합니다.-->
  	select * from member
  </select>
  
  <insert id="signUp">
  	insert into member(mId, mPwd, mEmail) values (#{mId}, #{mPwd}, #{mEmail})
  </insert>
  
  <update id="updatePwd">
  	update member set mPwd=#{newPwd} where mId=#{mId}
  </update>
  
  <select id="getPwd" resultType="String">
  	select mPwd from member where mId=#{mId}
  </select>
  
  <select id="idCheck" resultType="int">
  	select count(*) from member where mId=#{mId}
  </select>
  
  <select id="emailCheck" resultType="int">
  	select count(*) from member where mEmail=#{mEmail}
  </select>
  
  <select id="authenticate" resultType="com.example.hb.dto.LoginDto">
  	select * from member where mId=#{mId}
  </select>
  
  <select id="findId" resultType="String">
  	select mId from member where mEmail=#{mEmail}
  </select>
  
   <select id="findPwd" resultType="String">
  	select mPwd from member where mEmail=#{mEmail} and mId=#{mId}
  </select>
  
	<update id="refresh">
		update member set refresh=#{refresh} where mId=#{mId}
	</update>
	
	<select id="getRefresh" resultType="String">
		select refresh from member where mId=#{mId}
	</select>
	
	<delete id="withdrawProfile">
		delete from profile where pId=#{mId}
	</delete>
	
	<delete id="withdrawMember">
		delete from member where mId=#{mId}
	</delete>
	
	<delete id="deleteMate">
		delete from mate where mId=#{mId} or mtId=#{mId}
	</delete>
</mapper>